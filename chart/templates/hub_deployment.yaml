apiVersion: apps/v1
kind: Deployment
metadata:
  name: hub
  labels:
    app.kubernetes.io/component: hub
    {{- include "chart.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.hub.deploy.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/component: hub
      {{- include "chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "8001"
      labels:
        app.kubernetes.io/component: hub
        {{- include "chart.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      initContainers:
      - name: check-db-ready
        image: {{ .Values.postgresql.image.repository }}:{{ .Values.postgresql.image.tag }}
        imagePullPolicy: {{ .Values.pullPolicy }}
        env:
          - name: PGHOST
            value: {{ .Values.db.host }}
          - name: PGPORT
            value: "{{ .Values.db.port }}"
        command: ['sh', '-c', 'until pg_isready; do echo waiting for database; sleep 2; done;']
      containers:
        - name: hub
          image: {{ .Values.hub.deploy.image.repository }}:{{ .Values.imageTag }}
          imagePullPolicy: {{ .Values.pullPolicy }}
          volumeMounts:
          - name: hub-config
            mountPath: "/home/hub/.cfg"
            readOnly: true
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          resources:
            {{- toYaml .Values.hub.deploy.resources | nindent 12 }}
      volumes:
      - name: hub-config
        secret:
          secretName: hub-config
