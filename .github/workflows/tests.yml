name: Tests
on: [push]

jobs:
  database:
    runs-on: ubuntu-latest
    container:
      image: tegioz/db-tests
    services:
      postgres:
        image: tegioz/postgres-pgtap
        env:
          POSTGRES_USER: tests
          POSTGRES_PASSWORD: ""
          POSTGRES_DB: tests
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Apply database migrations
        working-directory: ./database/migrations
        run: tern migrate -c ../../.github/workflows/tern.conf --port ${{ job.services.postgres.ports[5432] }}
      - name: Install pgtap database extension
        run: psql -h postgres -p ${{ job.services.postgres.ports[5432] }} -U tests tests -c 'create extension pgtap;'
      - name: Run database tests
        working-directory: ./database/tests
        run: pg_prove --host postgres --dbname tests --username tests --verbose **/*.sql

  backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Setup Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
      - name: Check Go files format
        run: test -z $(gofmt -l $(find . -type f -name '*.go'))
      - name: Run backend tests
        run: go test -cover -race -v -mod=readonly ./...

  frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Install dependencies
        working-directory: ./web
        run: yarn install
      - name: Run frontend tests
        working-directory: ./web
        run: yarn test --watchAll=false --passWithNoTests
