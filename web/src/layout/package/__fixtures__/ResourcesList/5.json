{
  "apache-rules.yaml": "- macro: apache_consider_syscalls\n  condition: (evt.num < 0)\n\n- macro: app_apache\n  condition: container and container.image contains \"apache\"\n\n# Restricting listening ports to selected set\n\n- list: apache_allowed_inbound_ports_tcp\n  items: [80, 443]\n\n- rule: Unexpected inbound tcp connection apache\n  desc: Detect inbound traffic to apache using tcp on a port outside of expected set\n  condition: inbound and evt.rawres >= 0 and not fd.sport in (apache_allowed_inbound_ports_tcp) and app_apache\n  output: Inbound network connection to apache on unexpected port (command=%proc.cmdline pid=%proc.pid connection=%fd.name sport=%fd.sport user=%user.name %container.info image=%container.image)\n  priority: NOTICE\n\n# Restricting spawned processes to selected set\n\n- list: apache_allowed_processes\n  items:\n    [\n      \"apache2\",\n      \"basename\",\n      \"grep\",\n      \"app-entrypoint.\",\n      \"node\",\n      \"sleep\",\n      \"dirname\",\n      \"httpd\",\n      \"nami\",\n      \"sh\",\n      \"tini\",\n    ]\n\n- rule: Unexpected spawned process apache\n  desc: Detect a process started in a apache container outside of an expected set\n  condition: spawned_process and not proc.name in (apache_allowed_processes) and app_apache\n  output: Unexpected process spawned in apache container (command=%proc.cmdline pid=%proc.pid user=%user.name %container.info image=%container.image)\n  priority: NOTICE\n\n- list: apache_allowed_file_prefixes_readwrite\n  items: [\"/opt\", \"/tmp\", \"/dev/null\"]\n\n- rule: Unexpected file access readwrite for apache\n  desc: Detect an attempt to access a file readwrite other than below an expected list of directories\n  condition: (open_write) and not fd.name pmatch (apache_allowed_file_prefixes_readwrite) and app_apache\n  output: Unexpected file accessed readwrite for apache (command=%proc.cmdline pid=%proc.pid file=%fd.name %container.info image=%container.image)\n  priority: NOTICE\n",
  "etcd-rules.yaml": "- macro: etcd_consider_syscalls\n  condition: (evt.num < 0)\n\n- macro: app_etcd\n  condition: container and container.image contains \"k8s_etcd\"\n\n# Not considering all inbound networking suspect\n\n- list: etcd_outbound_processes\n  items:\n    - etcd\n\n- rule: Unauthorized process opened an outbound connection (etcd)\n  desc: A etcd process tried to open an outbound connection and is not whitelisted\n  condition: outbound and not proc.name in (etcd_outbound_processes) and app_etcd\n  output:\n    Non-whitelisted process opened an outbound connection (command=%proc.cmdline\n    connection=%fd.name)\n  priority: WARNING\n\n# Restricting listening ports to selected set\n\n- list: etcd_allowed_inbound_ports_tcp\n  items: [2380, 4001, 7001]\n\n- rule: Unexpected inbound tcp connection etcd\n  desc: Detect inbound traffic to etcd using tcp on a port outside of expected set\n  condition: inbound and evt.rawres >= 0 and not fd.sport in (etcd_allowed_inbound_ports_tcp) and app_etcd\n  output: Inbound network connection to etcd on unexpected port (command=%proc.cmdline pid=%proc.pid connection=%fd.name sport=%fd.sport user=%user.name %container.info image=%container.image)\n  priority: NOTICE\n\n# Restricting spawned processes to selected set\n\n- list: etcd_allowed_processes\n  items: [\"/usr/local/bin/etcd\"]\n\n- rule: Unexpected spawned process etcd\n  desc: Detect a process started in a etcd container outside of an expected set\n  condition: spawned_process and not proc.name in (etcd_allowed_processes) and app_etcd\n  output: Unexpected process spawned in etcd container (command=%proc.cmdline pid=%proc.pid user=%user.name %container.info image=%container.image)\n  priority: NOTICE\n\n# Restricting files read or written to specific set\n\n- list: etcd_allowed_file_prefixes_readonly\n  items: [\"/proc/self\", \"/var/etcd/data/member\"]\n\n- rule: Unexpected file access readonly for etcd\n  desc: Detect an attempt to access a file readonly other than below an expected list of directories\n  condition: (open_read and evt.is_open_write=false) and not fd.name pmatch (etcd_allowed_file_prefixes_readonly) and app_etcd\n  output: Unexpected file accessed readonly for etcd (command=%proc.cmdline pid=%proc.pid file=%fd.name %container.info image=%container.image)\n  priority: NOTICE\n\n- list: etcd_allowed_file_prefixes_readwrite\n  items: [\"/var/etcd/data/member\"]\n\n- rule: Unexpected file access readwrite for etcd\n  desc: Detect an attempt to access a file readwrite other than below an expected list of directories\n  condition: (open_write) and not fd.name pmatch (etcd_allowed_file_prefixes_readwrite) and app_etcd\n  output: Unexpected file accessed readwrite for etcd (command=%proc.cmdline pid=%proc.pid file=%fd.name %container.info image=%container.image)\n  priority: NOTICE\n\n# Restricting syscalls to selected set\n\n- list: etcd_allowed_syscalls\n  items: [accept, openat, renameat, unlinkat]\n\n- rule: Unexpected syscall etcd\n  desc: Detect a syscall in a etcd container outside of an expected set\n  condition: etcd_consider_syscalls and not evt.type in (\"<unknown>\", etcd_allowed_syscalls) and app_etcd\n  output: Unexpected syscall in etcd container (command=%proc.cmdline pid=%proc.pid user=%user.name syscall=%evt.type args=%evt.args %container.info image=%container.image)\n  priority: NOTICE\n  warn_evttypes: False\n"
}
